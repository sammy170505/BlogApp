{"ast":null,"code":"const createBlog = async blog => {\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(blog)\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res.message || res;\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst getBlogs = async () => {\n  try {\n    const data = await fetch(\"http://localhost:8000/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    return error;\n  }\n};\nconst getBlogByID = async id => {\n  try {\n    const data = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    // return error;\n  }\n};\nconst getBlogsByCategoryId = async categoryId => {\n  try {\n    const data = await fetch(\"http://localhost:8000/api/blogs/categories/\" + categoryId, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    // return error;\n  }\n};\nconst updateBlog = async id => {\n  try {\n    const data = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    // return error;\n  }\n};\nconst deleteBlog = async id => {\n  try {\n    const data = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    // return error;\n  }\n};\nconst blogService = {\n  getBlogs,\n  getBlogsByCategoryId,\n  createBlog,\n  getBlogByID,\n  updateBlog,\n  deleteBlog\n};\nexport default blogService;","map":{"version":3,"names":["createBlog","blog","response","fetch","method","headers","body","JSON","stringify","ok","res","json","message","blogsApiData","getBlogs","data","error","getBlogByID","id","getBlogsByCategoryId","categoryId","updateBlog","deleteBlog","blogService"],"sources":["C:/Users/Samruddhi/Desktop/Personal Projects/IX/Bootcamp/Blog App/frontend/src/services/blogService.js"],"sourcesContent":["const createBlog = async (blog) => {\r\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(blog),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    let res = await response.json();\r\n    throw res.message || res;\r\n  }\r\n\r\n  const blogsApiData = await response.json();\r\n  return blogsApiData;\r\n};\r\n\r\nconst getBlogs = async () => {\r\n  try {\r\n    const data = await fetch(\"http://localhost:8000/api/blogs\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst getBlogByID = async (id) => {\r\n  try {\r\n    const data = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    // return error;\r\n  }\r\n};\r\n\r\nconst getBlogsByCategoryId = async (categoryId) => {\r\n  try {\r\n    const data = await fetch(\r\n      \"http://localhost:8000/api/blogs/categories/\" + categoryId,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    // return error;\r\n  }\r\n};\r\n\r\nconst updateBlog = async (id) => {\r\n  try {\r\n    const data = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    // return error;\r\n  }\r\n};\r\n\r\nconst deleteBlog = async (id) => {\r\n  try {\r\n    const data = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    // return error;\r\n  }\r\n};\r\n\r\nconst blogService = {\r\n  getBlogs,\r\n  getBlogsByCategoryId,\r\n  createBlog,\r\n  getBlogByID,\r\n  updateBlog,\r\n  deleteBlog,\r\n};\r\n\r\nexport default blogService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}