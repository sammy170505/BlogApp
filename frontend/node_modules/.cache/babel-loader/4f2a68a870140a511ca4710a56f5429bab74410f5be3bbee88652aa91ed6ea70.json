{"ast":null,"code":"const getBlogs = async () => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst getBlogsByCategoryId = async categoryId => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/category/\" + categoryId, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst blogService = {\n  getBlogs,\n  getBlogsByCategoryId\n};\nexport default blogService;","map":{"version":3,"names":["getBlogs","data","fetch","method","headers","blogsApiData","json","error","Error","getBlogsByCategoryId","categoryId","blogService"],"sources":["C:/Users/Samruddhi/Desktop/Personal Projects/IX/Bootcamp/Blog App/frontend/src/services/blogService.js"],"sourcesContent":["const getBlogs = async () => {\r\n  try {\r\n    const data = await fetch(\r\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nconst getBlogsByCategoryId = async (categoryId) => {\r\n  try {\r\n    const data = await fetch(\r\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/category/\" +\r\n        categoryId,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const blogsApiData = await data.json();\r\n    return blogsApiData.data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nconst blogService = {\r\n  getBlogs,\r\n  getBlogsByCategoryId,\r\n};\r\n\r\nexport default blogService;"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAC3B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CACtB,0DAA0D,EAC1D;MACEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,MAAMC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACtC,OAAOD,YAAY,CAACJ,IAAI;EAC1B,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAED,MAAME,oBAAoB,GAAG,MAAOC,UAAU,IAAK;EACjD,IAAI;IACF,MAAMT,IAAI,GAAG,MAAMC,KAAK,CACtB,oEAAoE,GAClEQ,UAAU,EACZ;MACEP,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,MAAMC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACtC,OAAOD,YAAY,CAACJ,IAAI;EAC1B,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAED,MAAMI,WAAW,GAAG;EAClBX,QAAQ;EACRS;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}