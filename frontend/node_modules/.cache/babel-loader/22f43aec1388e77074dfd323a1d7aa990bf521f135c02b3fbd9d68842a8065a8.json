{"ast":null,"code":"const createCategory = async category => {\n  const response = await fetch(\"http://localhost:8000/api/categories\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: JSON.stringify(category)\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const categoriesApiData = await response.json();\n  return categoriesApiData;\n};\nconst fetchCategories = async () => {\n  const response = await fetch(\"http://localhost:8000/api/categories\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const categoriesApiData = await response.json();\n  return categoriesApiData;\n};\nconst updateCategory = async category => {\n  const response = await fetch(\"http://localhost:8000/api/categories/\" + category.id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: JSON.stringify(category)\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const categoriesApiData = await response.json();\n  return categoriesApiData;\n};\nconst deleteCategory = async id => {\n  const response = await fetch(\"http://localhost:8000/api/categories/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const categoriesApiData = await response.json();\n  return categoriesApiData;\n};\nconst categoryService = {\n  createCategory,\n  fetchCategories,\n  updateCategory,\n  deleteCategory\n};\nexport default categoryService;","map":{"version":3,"names":["createCategory","category","response","fetch","method","headers","Authorization","JSON","parse","localStorage","getItem","token","body","stringify","ok","res","json","message","err","console","log","error","Error","categoriesApiData","fetchCategories","updateCategory","id","deleteCategory","categoryService"],"sources":["C:/Users/Samruddhi/Desktop/Personal Projects/IX/Bootcamp/Blog App/frontend/src/services/categoryService.js"],"sourcesContent":["const createCategory = async (category) => {\r\n  const response = await fetch(\"http://localhost:8000/api/categories\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\r\n    },\r\n    body: JSON.stringify(category),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const categoriesApiData = await response.json();\r\n  return categoriesApiData;\r\n};\r\n\r\nconst fetchCategories = async () => {\r\n  const response = await fetch(\"http://localhost:8000/api/categories\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const categoriesApiData = await response.json();\r\n  return categoriesApiData;\r\n};\r\n\r\nconst updateCategory = async (category) => {\r\n  const response = await fetch(\r\n    \"http://localhost:8000/api/categories/\" + category.id,\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization:\r\n          \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\r\n      },\r\n      body: JSON.stringify(category),\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const categoriesApiData = await response.json();\r\n  return categoriesApiData;\r\n};\r\n\r\nconst deleteCategory = async (id) => {\r\n  const response = await fetch(\"http://localhost:8000/api/categories/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    try {\r\n      let res = await response.json();\r\n      throw res.message || JSON.stringify(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const error = new Error(\"Something went wrong\");\r\n      throw error.message;\r\n    }\r\n  }\r\n\r\n  const categoriesApiData = await response.json();\r\n  return categoriesApiData;\r\n};\r\n\r\nconst categoryService = {\r\n  createCategory,\r\n  fetchCategories,\r\n  updateCategory,\r\n  deleteCategory,\r\n};\r\n\r\nexport default categoryService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}